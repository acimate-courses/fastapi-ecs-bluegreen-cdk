name: Deploy Infra (CDK)

on:
  push:
    branches: [ "main" ]
    paths:
      - 'infra/**'
      - 'app/**'
      - '.github/workflows/infra.yml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 707690426194

jobs:
  synth:    
    name: Synthesize CDK (cdk.out)
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CDK CLI
        run: npm i -g aws-cdk@2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install CDK Python deps
        working-directory: infra
        run: pip install -r requirements.txt

      - name: Synthesize
        working-directory: infra
        run: |
          mkdir -p ../cdk.out
          cdk synth -o ../cdk.out

      - name: Show assemblies produced
        run: |
          echo "Assemblies in cdk.out:"
          ls -la cdk.out || true
          find cdk.out -maxdepth 1 -type d -name '*assembly*' -print || true

      - name: Zip cloud assembly
        run: |
          cd cdk.out
          zip -r ../cdk-out.zip .
      - name: Upload zipped assembly
        uses: actions/upload-artifact@v4
        with:
          name: cdk-out-zip
          path: cdk-out.zip

  deploy-dev:    
    name: Deploy to dev (dev-assembly)
    needs: synth
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    env:
      ASSEMBLY_DIR: assembly-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Download zipped assembly
        uses: actions/download-artifact@v4
        with:
          name: cdk-out-zip
          path: .

      - name: Unzip
        run: unzip cdk-out.zip -d cdk.out

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CDK CLI
        run: npm i -g aws-cdk@2

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::707690426194:role/training-github-oidc-cdk
          aws-region: us-east-1

      - name: cdk diff
        run: cdk diff --app cdk.out $CDK_STACKS_TO_DEPLOY
        env:
          CDK_STACKS_TO_DEPLOY: dev/* # make it dynamic through input based.

      - name: cdk deploy
        run: cdk deploy --app cdk.out $CDK_STACKS_TO_DEPLOY --require-approval never
        env:
          CDK_STACKS_TO_DEPLOY: dev/* # make it dynamic through input based.      
  
      - name: deploy-ecs-blue-green
        uses: ./.github/actions/deploy-ecs
        with:
          role-to-assume: arn:aws:iam::707690426194:role/training-github-oidc-cdk
          aws-region: us-east-1
          aws-account-id: 707690426194          
          stack-name: dev/fastapi-ecs-training-cluster-us-east-1-ecs-blue-green
          image-tag: ${{ github.sha }}
          ecr-repo: ecs-bluegreen-app


